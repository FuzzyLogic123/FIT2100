the following will simulate process sheduling with various sheduling
algorithims with varying efficiency. The results are accepted as the 
first command line argument. If an argument is not provided then processes.txt
is used by default. 

to compile type "make" in the terminal

to run any of the following programs:
    FCFS (first come first servered)
    RR (round robin)
    deadline (deadline based sheduling)

type ./{name of program} in the terminal

for example to run task2-32460929 (task 2 - deadline), you would type the following commands
into terminal in sequence:

make
./task2-32460929

## Task 3 Rationale ##

The algorithim I have decided to implement chooses the process
with the deadline that is closest to the current time. Hence ensuring
that processes where the deadline is closest to expiring. This works
becasue if a process is close to the deadline it will be completed as soon
as possible. Processes that are passed their deadlines will be left to the
end because doing them any earlier would not maximise the number of processes
completed.

for example in the case when we have 3 processes as follows:

